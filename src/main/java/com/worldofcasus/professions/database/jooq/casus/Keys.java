/*
 * This file is generated by jOOQ.
 */
package com.worldofcasus.professions.database.jooq.casus;


import com.worldofcasus.professions.database.jooq.casus.tables.CharacterProfession;
import com.worldofcasus.professions.database.jooq.casus.tables.CharacterStamina;
import com.worldofcasus.professions.database.jooq.casus.tables.Node;
import com.worldofcasus.professions.database.jooq.casus.tables.NodeItem;
import com.worldofcasus.professions.database.jooq.casus.tables.Profession;
import com.worldofcasus.professions.database.jooq.casus.tables.records.CharacterProfessionRecord;
import com.worldofcasus.professions.database.jooq.casus.tables.records.CharacterStaminaRecord;
import com.worldofcasus.professions.database.jooq.casus.tables.records.NodeItemRecord;
import com.worldofcasus.professions.database.jooq.casus.tables.records.NodeRecord;
import com.worldofcasus.professions.database.jooq.casus.tables.records.ProfessionRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * casus.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CharacterProfessionRecord> KEY_CHARACTER_PROFESSION_PRIMARY = Internal.createUniqueKey(CharacterProfession.CHARACTER_PROFESSION, DSL.name("KEY_character_profession_PRIMARY"), new TableField[] { CharacterProfession.CHARACTER_PROFESSION.CHARACTER_ID }, true);
    public static final UniqueKey<CharacterStaminaRecord> KEY_CHARACTER_STAMINA_PRIMARY = Internal.createUniqueKey(CharacterStamina.CHARACTER_STAMINA, DSL.name("KEY_character_stamina_PRIMARY"), new TableField[] { CharacterStamina.CHARACTER_STAMINA.CHARACTER_ID }, true);
    public static final UniqueKey<NodeRecord> KEY_NODE_PRIMARY = Internal.createUniqueKey(Node.NODE, DSL.name("KEY_node_PRIMARY"), new TableField[] { Node.NODE.ID }, true);
    public static final UniqueKey<NodeRecord> KEY_NODE_UK_NODE_NAME = Internal.createUniqueKey(Node.NODE, DSL.name("KEY_node_uk_node_name"), new TableField[] { Node.NODE.NAME }, true);
    public static final UniqueKey<NodeItemRecord> KEY_NODE_ITEM_PRIMARY = Internal.createUniqueKey(NodeItem.NODE_ITEM, DSL.name("KEY_node_item_PRIMARY"), new TableField[] { NodeItem.NODE_ITEM.ID }, true);
    public static final UniqueKey<ProfessionRecord> KEY_PROFESSION_PRIMARY = Internal.createUniqueKey(Profession.PROFESSION, DSL.name("KEY_profession_PRIMARY"), new TableField[] { Profession.PROFESSION.ID }, true);
    public static final UniqueKey<ProfessionRecord> KEY_PROFESSION_UK_PROFESSION_NAME = Internal.createUniqueKey(Profession.PROFESSION, DSL.name("KEY_profession_uk_profession_name"), new TableField[] { Profession.PROFESSION.NAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<NodeItemRecord, NodeRecord> FK_NODE_ITEM_NODE_ID = Internal.createForeignKey(NodeItem.NODE_ITEM, DSL.name("fk_node_item_node_id"), new TableField[] { NodeItem.NODE_ITEM.NODE_ID }, Keys.KEY_NODE_PRIMARY, new TableField[] { Node.NODE.ID }, true);
}
